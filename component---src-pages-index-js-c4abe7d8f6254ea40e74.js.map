{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","className","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt","date","pageQuery"],"mappings":"2FAAA,8GA8DeA,UAxDG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,WACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACX,yLAUJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACX,wBAAIK,UAAU,cAAcC,MAAO,CAAEC,UAAU,SAC5CN,EAAMO,KAAI,SAAAC,GACT,IAAMT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,KAAMP,UAAU,IACnC,6BACEA,UAAU,gBACVS,WAAS,EACTC,SAAS,6BAET,4BAAQV,UAAU,gBAChB,wBAAIA,UAAU,eACZ,kBAAC,OAAD,CAAMW,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,OACnC,0BAAMA,SAAS,YAAYjB,MAIjC,6BAASK,UAAU,qBACjB,uBACEa,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CJ,SAAS,gBAET,+BAAQR,EAAKC,YAAYY,eAatC,IAAMC,EAAS","file":"component---src-pages-index-js-c4abe7d8f6254ea40e74.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `openspot`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Home\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <ol className=\"posts__list\" style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug} className=\"\">\n              <article\n                className=\"post__wrapper\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header className=\"post__header\">\n                  <h2 className=\"post__title\">\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                </header>\n                <section className=\"post__description\">\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                    />\n                    <small>{post.frontmatter.date}</small>\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(fromNow: true)\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}